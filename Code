#Tree based model

#first let's make sure that the package is installed and library is loaded

install.packages("party")
library(party)

#then we'll assign the object tree our decision tree on the mtcards data set
tree <- ctree(mpg ~ ., data = mtcars)

#Let's take a  look at our conditional inference tree object that we just made
plot (tree)

#ctree function
#we took mpg and used ctree to calculate the most important drivers of mpg. 
#in our plot we see weight (wt) and (displacement) 
#more is explained on page 32 in Intro to ML in R

#now let's use this model to make predictions
#let's define our training dataset


#let's split our dat into test and train. This is on page 23 in the book
split_size = 0.8

sample_size = floor(split_size * nrow(mtcars))

set.seed(123)

train_indices <- sample(seq_len(nrow(mtcars)), size = sample_size)

train <-  mtcars[train_indices, ]
test <- mtcars[-train_indices, ]
tree.train <- ctree(mpg ~ ., data = train)
plot(tree.train)

#You'll notice that the picture for this training data is different. 


#This is cool, in 2 lines of code we do a regression and classification. 
#predict function applies it to the test data and strores in column test.data
test$mpg.tree <-  predict(tree.train, test)
#doing the same and using nodes gives us a class output
test$class <- predict(tree.train, test, type = "node")

#now we put these together in a single data.frame
data.frame(row.names(test), test$mpg, test$mpg.tree, test$class)
